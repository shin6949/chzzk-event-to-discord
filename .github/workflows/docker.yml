name: Make Docker Image

on:
  push:
    tags:
      - V*

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'microsoft'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Test with Gradle
        run: ./gradlew test --info
      - name: Publish Test Report
        uses: actions/upload-artifact@v4
        with:
          name: Test Reports
          path: build/reports/tests/test/

  make-jar:
    runs-on: ubuntu-22.04
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/Ver.}" >> $GITHUB_ENV

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'microsoft'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Package With Gradle
        run: gradle build

      - name: Move app file
        run: mv ./build/libs/chzzk-event-to-discord-*.jar ./chzzk-event-to-discord-${{ env.RELEASE_VERSION }}.jar

      - name: Upload jar file to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: chzzk-event-to-discord
          path: ./chzzk-event-to-discord-${{ env.RELEASE_VERSION }}.jar
          retention-days: 1

  qemu-build-backend:
    runs-on: ubuntu-22.04
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/Ver.}" >> $GITHUB_ENV

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PERSONAL_TOKEN }}

      - name: Docker Build
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t ghcr.io/${{ github.repository_owner }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest --push .
          docker buildx build --platform linux/amd64,linux/arm64 -t ghcr.io/${{ github.repository_owner }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.RELEASE_VERSION }} --push .

  release:
    needs: [make-jar, test, qemu-build-backend]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/Ver.}" >> $GITHUB_ENV

      - name: Download Release Asset
        uses: actions/download-artifact@v4
        with:
          name: chzzk-event-to-discord

      - name: Create Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          automatic_release_tag: ${{ env.RELEASE_VERSION }}
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          draft: false
          prerelease: false
          files: |
            ./chzzk-event-to-discord-${{ env.RELEASE_VERSION }}.jar

#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./chzzk-event-to-discord-${{ env.RELEASE_VERSION }}.jar
#          asset_name: chzzk-event-to-discord-${{ env.RELEASE_VERSION }}.jar
#          asset_content_type: application/java-archive
